/**
 * This method will fire a bullet by removing it from this ships bullets, and then giving the bullet a new speed in the direction of orientation
 * and a new position in front of the bullet
 * @param bullet
 * @effect bullet is removed from the bullets of this ship
 * 		  |this.remove(bullet)
 * @effect The bullet gets a new position outside the ship and a new speed in the direction
 * 		   of the orientation of ship.
 *		  |see implementation
 * @effect if (!bullet.isValidWorldPosition())
 * 		  |bullet.destroy()
 * @throws NullPointerException
 * 		  |bullet == null
 * @throws WrongEntityException
 * 		  |!this.bullets.contains(bullet)
 * @throws IllegalPositionException
 * 	   	  |see implementation
 */
public void fireBullet(Bullet bullet) throws NullPointerException, WrongEntityException, IllegalPositionException{
	//we checken of we de bullet hebben.
	if (!this.bullets.contains(bullet)){
		throw new WrongEntityException(bullet);
	}
	//we verwijderen de bullet
	this.removeBullet(bullet);
	//local variabeles voor setspeed en setposition.
	double actualDistance = bullet.getRadius()+this.getRadius();
	double distance = (actualDistance*0.1)+actualDistance;
	double angle = this.getOrientation();
	double newXPos = this.getXPosition()+Math.cos(angle)*distance;
	double newYPos = this.getYPosition()+Math.sin(angle)*distance;
	double newYSpeed = Math.sin(angle)*250;
	double newXSpeed = Math.cos(angle)*250;
	//we zetten onze bullet op de juiste pos met de juiste snelheid.
	bullet.setPosition(newXPos, newYPos);
	bullet.setVelocity(newXSpeed, newYSpeed);
	
	//indien foute pos, we verwijderen onze bullet direct.
	if(!bullet.isValidWorldPosition())
		bullet.destroy();
	//indien overlap met andere entity, we handelen de collision 
	//STILL IMPLEMENT.
}
/**
 * A Method that loads a bullet
 * @param radius
 * 		 the radius of the new bullet that will be loaded in the ship.
 * @throws IllegalRadiusException
 *         see implementation 
 * @throws IllegalPositionException
 *         see implementation 
 * @throws NullPointerException
 * 		   this ship can not be null and mist have a world
 * 		   |((this==null)||(this.getWorld()==null))
 * @effect A newly created bullet with radius radius will be added to the ships loaded bullets.
 * 		 |Bullet newbullet = new Bullet(this.getXPosition(),this.getYPosition(),this.getXVelocity(),this.getYVelocity(),radius);
 * 		 |addBullet(newbullet)
 * 
 */
public void loadBullet(double radius) throws IllegalPositionException, IllegalRadiusException,WrongEntityException,NullPointerException{
	if ((this==null)||(this.getWorld()==null))
		throw new NullPointerException();
	if (getNbBullets()>15){
		throw new NullPointerException();
	}
	Bullet newbullet = new Bullet(this.getXPosition(),this.getYPosition(),this.getXVelocity(),this.getYVelocity(),radius);
	this.addBullet(newbullet);
	
}
